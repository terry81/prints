<?php

/**
 * This is the model base class for the table "fingerprint".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Fingerprint".
 *
 * Columns in table "fingerprint" available as properties of the model,
 * followed by relations of table "fingerprint" available as properties of the model.
 *
 * @property integer $id
 * @property string $identifier
 * @property string $accession
 * @property integer $no_motifs
 * @property string $creation_date
 * @property string $update_date
 * @property string $title
 * @property string $annotation
 * @property string $cfi
 * @property string $summary
 *
 * @property Truepartialpositives[] $truepartialpositives
 * @property Truepositives[] $truepositives
 * @property Motif[] $motifs
 * @property Scanhistory[] $scanhistories
 * @property Reference[] $references
 * @property Protein[] $proteins
 * @property Crossreference[] $crossreferences
 */
abstract class BaseFingerprint extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'fingerprint';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Fingerprint|Fingerprints', $n);
	}

	public static function representingColumn() {
		return 'identifier';
	}

	public function rules() {
		return array(
			array('identifier', 'required'),
			array('no_motifs', 'numerical', 'integerOnly'=>true),
			array('identifier', 'length', 'max'=>15),
			array('accession', 'length', 'max'=>40),
			array('title', 'length', 'max'=>100),
			array('creation_date, update_date, annotation, cfi, summary', 'safe'),
			array('accession, no_motifs, creation_date, update_date, title, annotation, cfi, summary', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, identifier, accession, no_motifs, creation_date, update_date, title, annotation, cfi, summary', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'truepartialpositives' => array(self::HAS_MANY, 'Truepartialpositives', 'fingerprint_id'),
			'truepositives' => array(self::HAS_MANY, 'Truepositives', 'fingerprint_id'),
			'motifs' => array(self::HAS_MANY, 'Motif', 'fingerprint_id'),
			'scanhistories' => array(self::HAS_MANY, 'Scanhistory', 'fingerprint_id'),
			'references' => array(self::HAS_MANY, 'Reference', 'fingerprint_id'),
			'proteins' => array(self::HAS_MANY, 'Protein', 'fingerprint_id'),
			'crossreferences' => array(self::HAS_MANY, 'Crossreference', 'fingerprint_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'identifier' => Yii::t('app', 'Identifier'),
			'accession' => Yii::t('app', 'Accession'),
			'no_motifs' => Yii::t('app', 'No Motifs'),
			'creation_date' => Yii::t('app', 'Creation Date'),
			'update_date' => Yii::t('app', 'Update Date'),
			'title' => Yii::t('app', 'Title'),
			'annotation' => Yii::t('app', 'Annotation'),
			'cfi' => Yii::t('app', 'Cfi'),
			'summary' => Yii::t('app', 'Summary'),
			'truepartialpositives' => null,
			'truepositives' => null,
			'motifs' => null,
			'scanhistories' => null,
			'references' => null,
			'proteins' => null,
			'crossreferences' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('identifier', $this->identifier, true);
		$criteria->compare('accession', $this->accession, true);
		$criteria->compare('no_motifs', $this->no_motifs);
		$criteria->compare('creation_date', $this->creation_date, true);
		$criteria->compare('update_date', $this->update_date, true);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('annotation', $this->annotation, true);
		$criteria->compare('cfi', $this->cfi, true);
		$criteria->compare('summary', $this->summary, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
