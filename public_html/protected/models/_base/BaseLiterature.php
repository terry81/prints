<?php

/**
 * This is the model base class for the table "literature".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Literature".
 *
 * Columns in table "literature" available as properties of the model,
 * followed by relations of table "literature" available as properties of the model.
 *
 * @property integer $fingerprint_id
 * @property string $author
 * @property string $title
 * @property string $journal
 * @property integer $literature_id
 *
 * @property Fingerprint $fingerprint
 */
abstract class BaseLiterature extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'literature';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Literature|Literatures', $n);
	}

	public static function representingColumn() {
		return 'author';
	}

	public function rules() {
		return array(
			array('fingerprint_id', 'numerical', 'integerOnly'=>true),
			array('author, title, journal', 'length', 'max'=>100),
			array('fingerprint_id, author, title, journal', 'default', 'setOnEmpty' => true, 'value' => null),
			array('fingerprint_id, author, title, journal, literature_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'fingerprint' => array(self::BELONGS_TO, 'Fingerprint', 'fingerprint_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'fingerprint_id' => null,
			'author' => Yii::t('app', 'Author'),
			'title' => Yii::t('app', 'Title'),
			'journal' => Yii::t('app', 'Journal'),
			'literature_id' => Yii::t('app', 'Literature'),
			'fingerprint' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('fingerprint_id', $this->fingerprint_id);
		$criteria->compare('author', $this->author, true);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('journal', $this->journal, true);
		$criteria->compare('literature_id', $this->literature_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}