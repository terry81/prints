<?php

/**
 * This is the model base class for the table "seq".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Seq".
 *
 * Columns in table "seq" available as properties of the model,
 * followed by relations of table "seq" available as properties of the model.
 *
 * @property integer $seq_id
 * @property integer $motif_id
 * @property string $sequence
 * @property string $pcode
 * @property integer $start
 * @property integer $interval
 *
 * @property Motif $motif
 */
abstract class BaseSeq extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'seq';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Seq|Seqs', $n);
	}

	public static function representingColumn() {
		return 'sequence';
	}

	public function rules() {
		return array(
			array('motif_id, start, interval', 'numerical', 'integerOnly'=>true),
			array('sequence', 'length', 'max'=>30),
			array('pcode', 'length', 'max'=>20),
			array('motif_id, sequence, pcode, start, interval', 'default', 'setOnEmpty' => true, 'value' => null),
			array('seq_id, motif_id, sequence, pcode, start, interval', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'motif' => array(self::BELONGS_TO, 'Motif', 'motif_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'seq_id' => Yii::t('app', 'Seq'),
			'motif_id' => null,
			'sequence' => Yii::t('app', 'Sequence'),
			'pcode' => Yii::t('app', 'Pcode'),
			'start' => Yii::t('app', 'Start'),
			'interval' => Yii::t('app', 'Interval'),
			'motif' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('seq_id', $this->seq_id);
		$criteria->compare('motif_id', $this->motif_id);
		$criteria->compare('sequence', $this->sequence, true);
		$criteria->compare('pcode', $this->pcode, true);
		$criteria->compare('start', $this->start);
		$criteria->compare('interval', $this->interval);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}